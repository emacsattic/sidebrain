Info file: sidebrain.info,    -*-Text-*-
produced by `texinfo-format-buffer'
from file `sidebrain.texinfo'
using `texinfmt.el' version 2.38 of 3 July 1998.

INFO-DIR-SECTION Software development
START-INFO-DIR-ENTRY
* Sidebrain (sidebrain)       A programmers' memory aide
END-INFO-DIR-ENTRY



File: sidebrain.info, Node: Top, Next: Basic Operations, Prev: (dir), Up: (dir)

Sidebrain is a programmer's memory aid, looking after a stack of tasks
and subtasks, and a queue or pool of tasks that are not on the stack.
It also keeps a collection of notes that you have made, associated
with the tasks.

Sidebrain can read (and update) "to do" comments in source files.

Having the computer look after this part of your cognitive load may
give your real brain more space to get on with doing the real
thinking. It can also help you to organise your work more effectively,
and to stay focused.

If you keep your sidebrain information up-to-date, you may well find
it easier to resume your work at the start of each day; in turn, this
may make it easier for you to put your work down and reduce the drive
to remain at your terminal when you could be getting on with your life
offline!

* Menu:

* Basic Operations::            Basic Operations
* Working with projects::       Working with projects
* Browsing the task queue::     The task queue browser
* Saving and restoring::        Saving and restoring
* Using comments in files::     Using comments in files
* Installation and configuration::  Installation and configuration

 -- The Detailed Node Listing ---

Basic Operations

* Beginning and ending tasks::  Beginning and ending tasks
* Suspending and resuming tasks::  Suspending and resuming tasks
* Task priorities::             
* Observations::                Observations
* Creating reminders::          Creating reminders

Beginning and ending tasks

* Beginning tasks::             Beginning tasks
* Ending tasks::                Ending tasks

Working with projects

* Creating projects and groups::  
* Selecting projects and groups::  
* Deleting projects and groups::  

Selecting projects and groups

* Selecting project groups::    Selecting project groups
* Selecting projects::          Selecting projects within a project group

Saving and restoring

* Customizing the save::        

Installation and configuration

* Installing sidebrain::        Installing sidebrain
* Configuring sidebrain::       Configuring sidebrain




File: sidebrain.info, Node: Basic Operations, Next: Working with projects, Prev: Top, Up: Top

Basic Operations
****************

It has long been known that the human working memory is very limited
in the number of items it can store. This is often apparent when
developing or debugging software. Sidebrain is a package designed to
take some of the working memory load for many programming tasks.

Sidebrain models the programmer's cognitive activity in a simple,
computer-like, manner, as a stack of tasks and subtasks, with a queue
of suspended stacks which can be suspended and resumed.

Attached to each task stack may be a collection of observations.

* Menu:

* Beginning and ending tasks::  Beginning and ending tasks
* Suspending and resuming tasks::  Suspending and resuming tasks
* Task priorities::             
* Observations::                Observations
* Creating reminders::          Creating reminders



File: sidebrain.info, Node: Beginning and ending tasks, Next: Suspending and resuming tasks, Prev: Basic Operations, Up: Basic Operations

Beginning and ending tasks
==========================

The most basic sidebrain operations are beginning and ending tasks.

To begin a task, enter the command `sidebrain-begin-task'. You will be
prompted for some text describing the task. A window or frame will
appear displaying the current task stack, with your newly entered task
on top.

To end the topmost task of the stack, enter the command
`sidebrain-end-task'. The task will be popped from the stack.

* Menu:

* Beginning tasks::             Beginning tasks
* Ending tasks::                Ending tasks



File: sidebrain.info, Node: Beginning tasks, Next: Ending tasks, Prev: Beginning and ending tasks, Up: Beginning and ending tasks

Beginning tasks
---------------

When you begin a task, it always becomes part of a task stack. If the
task stack is empty at the time, you are prompted for a project (and
project group) to which the task stack will belong. See *Note Working
with projects:: for details of projects and project groups.



File: sidebrain.info, Node: Ending tasks, Prev: Beginning tasks, Up: Beginning and ending tasks

Ending tasks
------------

If the task you have just popped has a question mark at the end, you
will be prompted to make an observation. See *Note Observations:: for
more about observations.

(This behaviour is controlled by the variable
`sidebrain-auto-ask-info-gathering-results'; it happens if it is non
nil, and contains a regular expression describing
information-gathering tasks.)

If the task came from a "to do" comment, the word `todo' in the
comment is changed to `done'. this behaviour is controlled by the
variable `sidebrain-mark-done-comments'.



File: sidebrain.info, Node: Suspending and resuming tasks, Next: Task priorities, Prev: Beginning and ending tasks, Up: Basic Operations

Suspending and resuming tasks
=============================

As well as working with stacks made of tasks and subtasks, you can
switch between stacks. You can suspend a task stack, and resume
another. (Suspending your current stack happens automatically on
resuming another; you do not need to do it manually.)

To start a new task stack, from scratch, suspend your old one manually
with the command `sidebrain-suspend-task' and start the new one with
the command `sidebrain-begin-task'.

There are two ways to select a suspended task and make it current:

   * The command `sidebrain-resume-task', which prompts for a project
     group, a project, and a stack to resume.
   * The task queue browser, run by the command
     `sidebrain-browse-tasks', which displays a buffer listing your
     task stacks (organised into projects, which are organised into
     project groups). See *Note Browsing the task queue:: for details
     of this.

See *Note Working with projects:: for details of the sidebrain project
system.

When you suspend a task, it is automatically stored in the project
from which it came. (In fact, it always remains part of that project.)



File: sidebrain.info, Node: Task priorities, Next: Observations, Prev: Suspending and resuming tasks, Up: Basic Operations

Task priorities
===============




File: sidebrain.info, Node: Observations, Next: Creating reminders, Prev: Task priorities, Up: Basic Operations

Observations
============

Programmers frequently make observations, while deciding how to do
something. Sidebrain provides a place to keep them handy.

To make an observation, use the command `sidebrain-observe'. You will
be prompted for the text of the observation, which will then be
displayed below your task stack, in the same emacs window. When ending
a task which ends with a question mark, you will be prompted
automatically for an observation. See *Note Ending tasks:: for the
actions taken on ending a task.



File: sidebrain.info, Node: Creating reminders, Prev: Observations, Up: Basic Operations

Creating reminders
==================

As well as switching out the current task stack to put it into the
pool of tasks, you can create a new, one-level, task stack with the
command `sidebrain-reminder', ready to resume later.

To make a reminder, type `sidebrain-reminder'. You will be prompted in
the minibuffer for the text of the reminder, and then for a project
group and project to put the reminder in.

The new task must be assigned to a project -- see *Note Working with
projects:: for an introduction to sidebrain's project system.



File: sidebrain.info, Node: Working with projects, Next: Browsing the task queue, Prev: Basic Operations, Up: Top

Working with projects
*********************

Sidebrain organizes your work into projects, which are arranged in
project groups. If you have a large number of suspended tasks or
reminders, this helps you to find them more easily.

* Menu:

* Creating projects and groups::  
* Selecting projects and groups::  
* Deleting projects and groups::  



File: sidebrain.info, Node: Creating projects and groups, Next: Selecting projects and groups, Prev: Working with projects, Up: Working with projects

Creating projects and groups
============================

Projects can exist only as part of a project group, so before you can
create any projects, you will need to create at least one project
group to put them in.

You can create a project group with the command
`sidebrain-new-project-group'. This will prompt for a name for the
group. The newly-created project group will become the current project
group. See *Note Selecting projects and groups:: for how to change the
current project.

You can create a project with the command `sidebrain-new-project'. The
new project will be in the current project group, and will become the
current project.




File: sidebrain.info, Node: Selecting projects and groups, Next: Deleting projects and groups, Prev: Creating projects and groups, Up: Working with projects

Selecting projects and groups
=============================

You can select a project group, and a project within it, using the
tasks browser *Note Browsing the task queue::, or with the commands
`sidebrain-set-project-group' and `sidebrain-set-project'.

* Menu:

* Selecting project groups::    Selecting project groups
* Selecting projects::          Selecting projects within a project group



File: sidebrain.info, Node: Selecting project groups, Next: Selecting projects, Prev: Selecting projects and groups, Up: Selecting projects and groups

Selecting project groups
------------------------

You can use the command `sidebrain-set-project-group' to select a
project group. This offers completion on the names of existing project
groups. Until you also select a project within the group *Note
Selecting projects::, or create a new one *Note Creating projects and
groups::, which also selects the new project automatically.

You can create a new project group; see *Note Creating projects and
groups::.



File: sidebrain.info, Node: Selecting projects, Prev: Selecting project groups, Up: Selecting projects and groups

Selecting projects
------------------

Having selected a project group, you can use the command
`sidebrain-set-project' to select a project within it. This offers
completion on the project names within the group.



File: sidebrain.info, Node: Deleting projects and groups, Prev: Selecting projects and groups, Up: Working with projects

Deleting projects and groups
============================




File: sidebrain.info, Node: Browsing the task queue, Next: Saving and restoring, Prev: Working with projects, Up: Top

Browsing the task queue
***********************

To select a task interactively, you can either use the command
`sidebrain-resume-task' (see ), or an interactive task queue browser
which you can run using `sidebrain-browse-tasks'.



File: sidebrain.info, Node: Saving and restoring, Next: Using comments in files, Prev: Browsing the task queue, Up: Top

Saving and restoring
********************

You can save your sidebrain data into a file, and load it again in a
later session.

If you want to keep data from session to session, put a call to

     (sidebrain-load-from-file)

in your .emacs, and

     (sidebrain-save-to-file)

somewhere where it will be called as you exit emacs.

You can also run these commands interactively.

Alternatively, you can set the variable
`sidebrain-save-after-commands' to something other than nil, and each
sidebrain operation will save the file automatically.


* Menu:

* Customizing the save::        



File: sidebrain.info, Node: Customizing the save, Prev: Saving and restoring, Up: Saving and restoring

Customizing the save
====================

You can change where sidebrain stores its data, by setting the
variable `sidebrain-file-name'.

You may want filenames to be usable on several machines (if, for
example, you keep your work on a fileserver or on removable media,
which may have different mount points on different hosts). To help
with this, you can set the hooks `sidebrain-filename-save-hooks' and
`sidebrain-filename-load-hooks' which should hold functions which take
a filename and, if they want to modify it, return the modified
version, otherwise return nil.

You can write code to put environment variables into the names on
saving, and use `substitute-in-file-name' to substitute the
appropriate values on the new host.

If you want to send sidebrain task lists by email, you may also want
to use these hooks to make the names relative to a project directory.



File: sidebrain.info, Node: Using comments in files, Next: Installation and configuration, Prev: Saving and restoring, Up: Top

Using comments in files
***********************

Sidebrain can read comments of the form `todo: thing to do' and
convert those into tasks; it also remembers where these tasks came
from, and changes the `todo' to `done' when you end those tasks.

See *Note Ending tasks:: for more about ending tasks.



File: sidebrain.info, Node: Installation and configuration, Prev: Using comments in files, Up: Top

Installation and configuration
******************************

Sidebrain is written entirely in elisp, and controlled through elisp
variables. It saves its persistent data in XML files, and you can
specify where these are to be stored.

* Menu:

* Installing sidebrain::        Installing sidebrain
* Configuring sidebrain::       Configuring sidebrain



File: sidebrain.info, Node: Installing sidebrain, Next: Configuring sidebrain, Prev: Installation and configuration, Up: Installation and configuration

Installing sidebrain
====================

To install sidebrain, unpack the tarball into a directory, and place
that directory onto `load-path'.

Either load it from your .emacs, or arrange autoloads to load it on
demand.



File: sidebrain.info, Node: Configuring sidebrain, Prev: Installing sidebrain, Up: Installation and configuration

Configuring sidebrain
=====================

You can see all the configuration variables in `sidebrain-vars.el'.


Tag table:
Node: Top297
Node: Basic Operations2449
Node: Beginning and ending tasks3373
Node: Beginning tasks4079
Node: Ending tasks4516
Node: Suspending and resuming tasks5176
Node: Task priorities6478
Node: Observations6639
Node: Creating reminders7274
Node: Working with projects7909
Node: Creating projects and groups8373
Node: Selecting projects and groups9180
Node: Selecting project groups9738
Node: Selecting projects10354
Node: Deleting projects and groups10686
Node: Browsing the task queue10871
Node: Saving and restoring11225
Node: Customizing the save11938
Node: Using comments in files12921
Node: Installation and configuration13353
Node: Installing sidebrain13810
Node: Configuring sidebrain14189

End tag table
